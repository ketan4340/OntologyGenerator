# 部分 (dcterms:hasPart)
IF (hasPart(をもつ/がある)) {
  ?stc a jass:Sentence ;
       jass:subject/jass:categorem/jass:means ?rsrcS ; 
       jass:predicate/jass:categorem/jass:infinitive ?has ; 
       jass:object ?clsO .
  ?clsO jass:adjuncts/rdf:first/jass:infinitive ?adjO ;
        jass:categorem/jass:means ?rsrcO .
  FILTER( (?has IN("もつ","持つ") && ?adjO="を") || (?has="ある" && ?adjO="が") )
} THEN {
  ?rsrcS dcterms:hasPart ?rsrcO .
};

# 動詞 (schema:Action)
IF (Action) {
  ?stc a jass:Sentence ; jass:predicate ?clsP .
  ?clsP jass:categorem [jass:mainPoS "動詞" ; jass:means ?rsrcVb] .
  ?clsP jass:adjuncts ?adjlistP .
  { 
  # 能動態 (受動態ではない)
    FILTER(?adjlistP = rdf:nil ||	# 動詞に付属語がない 
           NOT EXISTS {				# 付属語があるならそれが"れる"か"られる"以外
             ?adjlistP rdf:rest*/rdf:first [jass:subPoS1 "接尾" ; jass:infinitive ?reruinf] .
             FILTER( ?reruinf IN("れる","られる") )        
           })
    ?stc jass:subject/jass:categorem/jass:means ?rsrcS . 
    # "に"または"を"を付属語に持つ文節を対象とみなす
    OPTIONAL { ?stc (jass:caseNIclause|jass:caseWOclause)/jass:categorem/jass:means ?rsrcO . }
  } UNION {
  # 受動態
    # 付属語が存在し、それが"れる"か"られる"
    ?adjlistP rdf:rest*/rdf:first [jass:subPoS1 "接尾" ; jass:infinitive ?reruinf]. 
    FILTER( ?reruinf IN("れる","られる") ) 
    ?stc jass:subject/jass:categorem/jass:means ?rsrcO .
    # "に"を付属語に持つ文節の自立語を動作主体とみなす 
    OPTIONAL{ ?stc jass:caseNIclause/jass:categorem/jass:means ?rsrcS . }
  }
} THEN {
  _:v a ?rsrcVb ; 
      schema:agent ?rsrcS ;
      schema:object ?rsrcO .
  ?rsrcVb rdfs:subClassOf schema:Action .
};
